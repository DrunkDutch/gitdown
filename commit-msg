#!/usr/bin/env ruby
#
# Git hook for breathalyzing before commmitting

exec("exec < /dev/tty")

require "serialport"
require 'io/console'
require 'tumblr_client'

CONFIG = ".gitdown"

NORMAL = 0.05
BALLMER_MIN = 0.13
BALLMER_MAX = 0.15
KRUNK = 0.18
jdsfk

mode_descriptions = {"normal" => "You best not be tipsy. Not even one bit.", 
                     "krunk" => "If you ain't WASTED, you ain't COMMITTIN'",
                     "baller" => "BALL(m)ER PEAK: A narrow spike of blood alcohol content (0.13% - 0.15%) leading to high programming productivity.",
                     "math" => "A hobbled mode for those who haven't acquired their DrinkShield yet. Answer math problems to gain commit privileges."}

VOWELS = ['a', 'e', 'i', 'u', 'o', 'y', 'A', 'E', 'I', 'O', 'U', 'Y']

TUMBLRHOST = "gitdownhackny.tumblr.com"
API_KEY = "ZDJOwTnJd3SnXlGWjo8NyFORqcyc7wyjg0pAMIAHO2shdw9S6N"
API_SECRET = "p8R3nxfAG9QvOUCoOPmZz25N5YEnufwSdPt7aJ6gQDgfkdzqds"
USERNAME = 'gitdownhackny@gmail.com'
PASSWORD = 'hackny2013'

Tumblr.configure do |config|
  config.consumer_key = API_KEY
  config.consumer_secret = API_SECRET
  config.oauth_token = API_KEY
  config.oauth_token_secret = API_SECRET
end

mode = ""
if File.exist?(CONFIG)
  File.open(CONFIG).each do |line|
    if line =~ /^mode.*/
      mode = line.split(':')[1].strip
    end
  end
else
  puts "No .gitdown file found"
  exit 1
end

puts "----------------  Time to GITDOWN!!!  ----------------"
puts "You are in #{mode.upcase} mode."
puts mode_descriptions[mode]
puts "------------------------------------------------------"

unless mode == "math"
  #Serial port init variables
  port_str = "/dev/tty.usbmodem1421"  #set to Arduino USB port, can be checked in Arduino IDE
  baud_rate = 9600
  data_bits = 8
  stop_bits = 1
  parity = SerialPort::NONE
  sp = SerialPort.new(port_str, baud_rate, data_bits, stop_bits, parity)
  #Taking control of the serial port resets the Arduino.
  #Wait 4 seconds for it to start up and autocalibrate
  puts "Calibrating breathalyzer sensor..."
  sleep(4) 

  STDIN.iflush
  print "Prepare to blow into the breathalyzer! Press ENTER when ready."
  STDIN.gets #wait for enter key

  puts "Blow blow blow!!!"

  # get bac from breathalizer
  sp.write "a" #For the moment, the specific letter sent doesn't matter
  sleep(6)     #breathalyzer takes 5 seconds to measure, plus 1 for good measure
  bac = sp.gets.chomp.to_f / 100.0
  bac = 0.14
  puts "Your BAC is #{bac}%."
end

commit_file = ARGV[0]
message = File.read(commit_file).strip

case mode
when "normal"
  if bac > NORMAL
    puts "You are too drunk"
    exit 1
  else 
    puts "You are sober. Good job"
    exit 0
  end
when "krunk"
  if bac < NORMAL
    puts "You are not drunk enough"
    exit 1
  else
    client = Tumblr::Client.new
    # user = Tumblr::User.new(USERNAME, PASSWORD)
    puts "You are drunk! Good job"
    drunk_message = ""
    message.each_char do |c|
      if VOWELS.include?(c)
        drunk_message += c * Random.rand(2..5)
      else
        drunk_message += c
      end
    end
    File.open(commit_file, 'w') { |f| f.write(drunk_message) }
    post = client.text(TUMBLRHOST, body: drunk_message)
    posts = client.posts(TUMBLRHOST)
    # Tumblr::Post.create(email: USERNAME, password: PASSWORD, title: 'test', body: drunk_message)
    puts post
    puts posts
    exit 0
  end
when "baller"
  if bac >= BALLMER_MIN && bac <= BALLMER_MAX
    puts "You are at the ballmer peak. Awesome!"
    exit 0
  else
    puts "You are not at your ballmer peak"
    exit 1
  end
when "math"
  num1 = Random.rand(30..60)
  num2 = Random.rand(30..60)
  puts "What is #{num1}+#{num2}?"
  if(STDIN.gets.to_i == (num1 + num2))
    puts "Good job! You're sober enough to do math!"
    exit 0
  else
    puts "You suck at math."
    exit 1
  end
else
  puts "Incorrect mode, check .gitdown file for examples"
  exit 1
end
